plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    compileSdk 33
    namespace 'com.acoders.marvelfanbook'

    defaultConfig {
        applicationId "com.acoders.marvelfanbook"
        minSdk 23
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.acoders.marvelfanbook.di.HiltTestRunner"

        buildConfigField("String", "MARVEL_PRIVATE_API_KEY", apikeyProperties['MARVEL_PRIVATE_API_KEY'])
        buildConfigField("String", "MARVEL_PUBLIC_API_KEY", apikeyProperties['MARVEL_PUBLIC_API_KEY'])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    viewBinding {
        enabled = true
    }
}

dependencies {

    ext {
        okhttp_version = "5.0.0-alpha.2"
        coroutines_version = '1.6.4'
        retrofit_version = '2.9.0'
        room_version = "2.4.3"
        work_version = "2.7.1"
        hilt_version = '2.43.1'
    }

    // Android KTX
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.collection:collection-ktx:1.2.0'
    implementation 'androidx.fragment:fragment-ktx:1.5.5'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'

    //Lifeciclye
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.0-alpha03'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.0-alpha03'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'

    // Android UI and appcompat
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    //Dependence injection HILT
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //Network - OK HTTP
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    //Network - Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"

    //Serialization - Moshi
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    // Room Database
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    //Errors
    implementation("io.arrow-kt:arrow-core:1.0.1")

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.13.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.1'

    //Logs
    implementation "com.jakewharton.timber:timber:4.7.1"

    //Navigation
    implementation 'androidx.navigation:navigation-runtime-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'

    //Splash
    implementation 'androidx.core:core-splashscreen:1.0.0'

    //Data Store
    implementation("androidx.datastore:datastore:1.0.0")
    implementation("androidx.datastore:datastore-preferences:1.0.0")

    //Shimmer effect (Skeleton)
    implementation 'com.facebook.shimmer:shimmer:0.5.0@aar'

    //TESTING
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    //Mockito
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.0.0"
    testImplementation "org.mockito:mockito-inline:4.4.0"

    //Coroutines
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"

    //Turbine (for stat flows)
    testImplementation 'app.cash.turbine:turbine:0.8.0'

    //INSTRUMENTATION TESTS
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'

    //Network - OK HTTP
    androidTestImplementation("com.squareup.okhttp3:mockwebserver:$okhttp_version")

    //Coroutines
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    // optional - Test helpers
    androidTestImplementation("androidx.work:work-testing:$work_version")

    //Espresso
    androidTestImplementation('androidx.test.espresso:espresso-contrib:3.5.0') {
        exclude module: "protobuf-lite"
    }
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.4'

    //HILT
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$hilt_version"
}